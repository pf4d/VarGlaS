from cslvr import *

# directories for loading or saving data :
msh_dir = './dump/meshes/'  # directory where the mesh is located
out_dir = './dump/vars/'    # directory to save initialization

thklim  = 1.0          # [m] thickness limit
L       = 800000.0     # [m] mesh radius
Rel     = 450000       # [m] radial distance at which S_ring becomes negative
s       = 1e-5         # [a^{-1}] accumulation/ablation coefficient
Tmin    = 238.15       # [K] minimum temperature (located at divide)
St      = 1.67e-5      # [K m^{-1}] lapse rate

# load the mesh that was generated by gen_cylinder.py :
mesh    = Mesh(msh_dir + 'cylinder_mesh.xml.gz')

# these are the mesh attributes which we use to deform :
xmin    = -L
xmax    =  L
ymin    = -L
ymax    =  L

# width and origin of the domain for deforming x coord :
width_x  = xmax - xmin
offset_x = xmin

# width and origin of the domain for deforming y coord :
width_y  = ymax - ymin
offset_y = ymin

# iterate through the mesh coordinates and alter the horizontal components :
for x in mesh.coordinates():
  x[0]  = x[0]  * width_x           # transform x
  x[1]  = x[1]  * width_y           # transform y

# initialize the model :
model = D3Model(mesh, out_dir=out_dir, use_periodic=False)

# form the 2D upper-surface mesh :
model.form_srf_mesh()

# form a 2D model using the upper-surface mesh :
srfmodel = D2Model(model.srfmesh,
                   out_dir      = out_dir,
                   use_periodic = False,
                   kind         = 'submesh')

# generate the map between the 3D and 2D models :
model.generate_submesh_to_mesh_map(sub_model=srfmodel)

from cslvr import *

# set the output directory :
in_dir  = './vars/'
msh_dir = './meshes/'
out_dir = in_dir

# retrieve the domain contour
contour  = np.loadtxt(msh_dir + 'contour.txt')

f  = HDF5File(mpi_comm_world(), in_dir + 'state.h5',     'r')
fn = HDF5File(mpi_comm_world(), in_dir + 'submeshes.h5', 'w')

model = D3Model(mesh=f, out_dir=out_dir)

model.form_bed_mesh()
model.form_srf_mesh()
model.form_lat_mesh()
model.form_dvd_mesh(contour)

model.save_bed_mesh(fn)
model.save_srf_mesh(fn)
model.save_lat_mesh(fn)
model.save_dvd_mesh(fn)

fn.close()

